@model myFinPort.Models.BankAccount

@{
  ViewBag.Title = "Details";
}


<div class="container">
  <div class="row justify-content-center">
    <div class="col-8">
      <div class="card">
        <div class="card-header">
          <div class="row justify-content-between align-content-center">
            <div class="col-5">
              <h4 class="ml-2">Bank Account Details</h4>
            </div>
            <div class="col-2">
              <div class="model_img img-responsive">
                <i class="ml-1 mdi mdi-delete text-danger" id="delete-warning"></i>
              </div>
            </div>
          </div>
        </div>
        <div class="card-body">
          <dl class="dl-horizontal">
            <dt>
              @Html.DisplayNameFor(model => model.AccountName)
            </dt>

            <dd>
              <div class="col-10 card bg-success text-dark p-1">
                @Html.DisplayFor(model => model.AccountName)
              </div>
            </dd>

            <dt>
              @Html.DisplayNameFor(model => model.AccountType)
            </dt>

            <dd>
              <div class="col-10 card bg-success text-dark p-1">
                @Html.DisplayFor(model => model.AccountType)
              </div>
            </dd>

            <dt>
              Owner Email
            </dt>

            <dd>
              <div class="col-10 card bg-success text-dark p-1">
                @Html.DisplayFor(model => model.Owner.Email)
              </div>
            </dd>

            <dt>
              @Html.DisplayNameFor(model => model.Created)
            </dt>

            <dd>
              <div class="col-10 card bg-success text-dark p-1">
                @Html.DisplayFor(model => model.Created)
              </div>
            </dd>

            <dt>
              @Html.DisplayNameFor(model => model.StartingBalance)
            </dt>

            <dd>
              <div class="col-10 card bg-success text-dark p-1">
                @string.Format("{0:C}", Model.StartingBalance)
              </div>
            </dd>

            <dt>
              @Html.DisplayNameFor(model => model.CurrentBalance)
            </dt>

            <dd>
              <div class="col-10 card bg-success text-dark p-1">
                @string.Format("{0:C}", Model.CurrentBalance)
              </div>
            </dd>

            <dt>
              @Html.DisplayNameFor(model => model.WarningBalance)
            </dt>

            <dd>
              <div class="col-10 card bg-success text-dark p-1">
                @string.Format("{0:C}", Model.WarningBalance)
              </div>
            </dd>
          </dl>
        </div>
      </div>
    </div>
  </div>
</div>

@section Scripts {
  <script>
    //initializing
    $(document).ready(function () {
      "use strict";
      $.SweetAlert.init()
    })

    $('#delete-warning').click(function () {
      swal({
        title: "Are you sure?",
        text: "You will not be able to recover this account after deleting it!",
        type: "warning",
        showCancelButton: true,
        confirmButtonColor: "#DD6B55",
        confirmButtonText: "Yes, delete it!",
        closeOnConfirm: false
      },
        function () {
              confirmDelete();
            swal("Deleted!", "The account has been deleted.", "success");
        })
    });

    function confirmDelete() {
      $.post("@Url.Action("DeleteConfirmed", "BankAccounts", new { Id = @Model.Id })");
    }

  </script>
}


          @*$.ajax({
            url: "@Url.Action("DeleteConfirmed", "BankAccounts", new { Id = @Model.Id })",
            type: "post",
            success: function () { swal("Deleted!", "The account has been deleted.", "success"); },
            error: function (xhr, ajaxOptions, thrownError) { swal("Error!", "Something went wrong!", "error"); }
            })*@


