@model myFinPort.ViewModels.ConfigureHouseVM

@{
  ViewBag.Title = "ConfigureHouse";
}

<h2>ConfigureHouse</h2>


<!-- This is what this view gets from the user and sends to the controller -->
<!-- BankAccount: Account Type, Account Name, Starting Balance, Warning Balance -->
<!-- Budget: Budget Name -->
<!-- Budget Item: Budget Item Name, Target Amount -->

@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <h4>Budget</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.HouseholdId)

    <!-- Begin Bank Account Input fields -->
    <section id="bankAccountFields">

      <!-- Account Name field -->
      <div class="form-group">
        @Html.LabelFor(model => model.BankAccount.AccountName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.BankAccount.AccountName, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.BankAccount.AccountName, "", new { @class = "text-danger" })
        </div>
      </div>

      <!--Account Type field -->
      <div class="form-group">
        @Html.LabelFor(model => model.BankAccount.AccountType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EnumDropDownListFor(model => model.BankAccount.AccountType, htmlAttributes: new { @class = "form-control" })
          @Html.ValidationMessageFor(model => model.BankAccount.AccountType, "", new { @class = "text-danger" })
        </div>
      </div>

      <!-- Starting Balance field -->
      <div class="form-group">
        @Html.LabelFor(model => model.StartingBalance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.StartingBalance, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.StartingBalance, "", new { @class = "text-danger" })
        </div>
      </div>

      <!-- Warning Balance field -->
      <div class="form-group">
        @Html.LabelFor(model => model.BankAccount.WarningBalance, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.BankAccount.WarningBalance, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.BankAccount.WarningBalance, "", new { @class = "text-danger" })
        </div>
      </div>

    </section>
    <!-- End Bank Account Input fields -->

    <!-- Start Budget Input fields -->
    <section id="budgetFields">
      <div class="form-group">
        @Html.LabelFor(model => model.Budget.BudgetName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.Budget.BudgetName, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.Budget.BudgetName, "", new { @class = "text-danger" })
        </div>
      </div>
    </section>
    <!-- End Budget Input fields -->

    <!-- Start Budget Item fields -->
    <section class="bugetItemFields">
      <div class="form-group">
        @Html.LabelFor(model => model.BudgetItem.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.BudgetItem.ItemName, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.BudgetItem.ItemName, "", new { @class = "text-danger" })
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.BudgetItem.TargetAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.EditorFor(model => model.BudgetItem.TargetAmount, new { htmlAttributes = new { @class = "form-control" } })
          @Html.ValidationMessageFor(model => model.BudgetItem.TargetAmount, "", new { @class = "text-danger" })
        </div>
      </div>

    </section>
    <!-- End Budget Item fields -->

    <!-- Submit button -->
    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default" />
      </div>
    </div>
  </div>
}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
